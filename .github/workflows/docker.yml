name: Docker
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag of the repository to build"
        required: true
        default: "refs/heads/main"
      is_latest:
        type: boolean
        description: "Whether to tag the image as latest"
        required: false
        default: false
  workflow_call:
    inputs:
      tag:
        type: string
        description: "The tag of the repository to build"
        required: true
      is_latest:
        type: boolean
        description: "Whether to tag the image as latest"
        required: false
        default: false
jobs:
  buildx:
    name: Build & Publish
    environment: release
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Load docker/.env file. The weird syntax is because we need to append the
      # CAPYMOA_VERSION to the GITHUB_ENV and we need to strip quotes from the
      # value
      - 
        name: Load .env
        run: |
          source docker/.env &&
          echo CAPYMOA_VERSION=$CAPYMOA_VERSION >> $GITHUB_ENV

      - name: Name Image
        id: image_names
        run: |
          image_names="${{ secrets.DOCKERHUB_USERNAME }}/jupyter-capymoa:${{ env.CAPYMOA_VERSION }}"

          # If we were asked to tag as latest, add the latest tag
          if [ "${{ github.event.inputs.is_latest }}" = "true" ]; then
            image_names="$image_names,${{ secrets.DOCKERHUB_USERNAME }}/jupyter-capymoa:latest"
          fi
          echo "$image_names"
          echo "image_names=$image_names" >> $GITHUB_OUTPUT
        shell: sh
        
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          file: docker/dockerfile
          tags: ${{ steps.image_names.outputs.image_names }}
          build-args: CAPYMOA_VERSION=${{ env.CAPYMOA_VERSION }}

